---
import { Image } from 'astro:assets'
import loading from '../assets/loading.svg'

/**
 * 更新方法
 * SoundCloud の楽曲ページでShare > Embed >  Code を取得し、traks/ 直後の数字をworks配列に追加する。
 * 新しいものほど**下**に追加する。
 * 例：
 * <iframe width="100%" height="300" scrolling="no" frameborder="no" allow="autoplay" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/493911225&color=%236f725e&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true&visual=true"></iframe><div style="font-size: 10px; color: #cccccc;line-break: anywhere;word-break: normal;overflow: hidden;white-space: nowrap;text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;"><a href="https://soundcloud.com/trinity-trio" title="Trinity Trio" target="_blank" style="color: #cccccc; text-decoration: none;">Trinity Trio</a> · <a href="https://soundcloud.com/trinity-trio/grenada" title="grenada" target="_blank" style="color: #cccccc; text-decoration: none;">grenada</a></div>
 * この場合、works配列に'493911225'を追加する。
 */

const works = [
  '493909566',
  '493909692',
  '493909863',
  '493910124',
  '493910787',
  '493911225',
  '494605326',
]
---

<div id="works">
	{
		works.toReversed().map((trackId) => (
			<div class="box">
				<iframe
					class="song"
					allow="autoplay"
					src={`https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/${trackId}&color=%2300615b&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true&visual=true`}
				/>
				<Image
					class="loading"
					src={loading}
					alt="loading"
					width="200"
					height="200"
				/>
			</div>
		))
	}
</div>

<style lang="scss">
	#works {
		display: flex;
		flex-wrap: wrap;

		.box:nth-child(3n + 1) {
			background-color: #ffcc00;
		}
		.box:nth-child(3n + 2) {
			background-color: #e95513;
		}
		.box:nth-child(3n) {
			background-color: #9a35cd;
		}

		.song {
			z-index: 1;
			width: 100%;
			height: 100%;
		}

		.box {
			display: flex;
			justify-content: center;
			align-items: center;
			flex: 1;
			min-width: 30vw;
			max-width: calc(100vw / 3);
			height: calc(100vw / 3);
			position: relative;

			@media screen and (max-width: 768px) {
				min-width: 45vw;
				max-width: calc(100vw / 2);
				height: calc(100vw / 2);
			}

			@media screen and (max-width: 411px) {
				min-width: 90vw;
				max-width: 100vw;
				height: 100vw;
			}

			.loading {
				position: absolute;
				z-index: 0;
				width: 150px;
				height: 150px;
				animation: rotation 1s infinite ease-in-out;
			}
		}
	}

	@keyframes rotation {
		0% {
			transform: rotate(0deg);
		}
		100% {
			transform: rotate(358deg);
		}
	}
</style>
